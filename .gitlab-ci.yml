image: docker:latest
services:
  - docker:dind

stages:
  - build
  - test
  - docker_test
  - push

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  TEST_IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-test"

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

docker-build:
  stage: build
  script:
    - docker build --pull -t "$TEST_IMAGE" .
    - docker push $TEST_IMAGE

test:
  image: python:3.8-slim
  stage: test
  before_script:
    - python -V
    - python3 -m venv env
    - source env/bin/activate
    - apt-get update
    - apt-get install -y git
    - git submodule init
    - git submodule update
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install tox flake8

  script:
    - tox -e py38, flake8-ph, flake8-cnc
    

docker_test:
  before_script:
    - ''
  image: $TEST_IMAGE
  stage: docker_test
  script:
    - pip install tox
    - tox -e docker_env

push_dev:
  stage: push
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE "$CI_REGISTRY_IMAGE:dev"
    - docker push "$CI_REGISTRY_IMAGE:dev"
  only:
    - develop

push_master:
  stage: push
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - master

